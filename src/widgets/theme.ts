import { BuderState } from "../state";
import { BuderWidget } from "./widget";

export type BuderClassType = string | string[] | BuderState<string[]>;

export enum BuderThemeType {
  input,
  button,
  label,
  container,
  form,
  select,
  textarea,
  checkbox,
  radio,
  header,
  footer,
  section,
  article,
  nav,
  aside,
  main,
  figure,
  figcaption,
  table,
  caption,
  tbody,
  thead,
  tfoot,
  tr,
  th,
  td,
  video,
  audio,
  iframe,
  canvas,
  svg,
  math,
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  ul,
  ol,
  li,
  dl,
  dt,
  dd,
  a,
  em,
  strong,
  small,
  s,
  cite,
  q,
  dfn,
  abbr,
  time,
  code,
  var,
  samp,
  kbd,
  sub,
  sup,
  i,
  b,
  u,
  mark,
  ruby,
  rt,
  rp,
  bdi,
  bdo,
  span,
  br,
  wbr,
  ins,
  del,
  address,
  fieldset,
  text,
  password,
  datetime,
  datetimeLocal,
  date,
  month,
  week,
  number,
  email,
  submit,
  reset,
  primaryButton,
  secondaryButton,
  successButton,
  dangerButton,
  warningButton,
  infoButton,
  lightButton,
  darkButton,
  linkButton,
  blockButton,
  largeButton,
  smallButton,
  outlineButton,
  disabledButton,
  activeButton,
  dropdownButton,
  splitButton,
  toggleButton,
  checkboxButton,
  radioButton,
  listitem,
  list,
  link,
  image,
}

export function Theme(
  theme: Record<BuderThemeType, BuderClassType> | any,
  widget: BuderWidget
) {
  function applyTheme(widget: BuderWidget) {
    if (widget._children) {
      widget._children.forEach(applyTheme);
    }
    const type = widget._type;
    if (type) {
      const classes = theme[type];
      if (classes) {
        widget.class(classes);
      }
    }
  }
  applyTheme(widget);
}
